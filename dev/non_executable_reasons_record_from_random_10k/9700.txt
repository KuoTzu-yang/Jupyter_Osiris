3.6
Executability                            : True
Reproducibility                          : number of matched cells: 6 ; number of cells: 12
Reproducibility                          : matched ratio: 0.5 ; index of matched cells: [0, 1, 3, 8, 9, 10]
-------------------------------------------
Source Code of a Unmatched Cell 2
-------------------------------------------
# First plot the function to see how many roots it might have and roughly where they are
x=np.linspace(-2,2,1000)
y=x-np.cos(x)
plot(x,y)

-----------------
Original output:
[<matplotlib.lines.Line2D at 0x2ac76b4b2410>]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
ZTZqRTXdAAAAAElFTkSuQmCC

Executed output:
[<matplotlib.lines.Line2D at 0x7f9e6e251198>]

-------------------------------------------
Source Code of a Unmatched Cell 4
-------------------------------------------
# Bisection method - needs the function, root bracketing interval and tolerance 
root_bisection=bisection(f,0.0,1.0,1.e-12)
print(root_bisection)

-----------------
Original output:
will need  29  bisections
0.739085133187

Executed output:
0.7390851331874728

-------------------------------------------
Source Code of a Unmatched Cell 5
-------------------------------------------
# Ridder's method - needs the function and root bracketing interval
root_ridder = ridder(f,0.,1.)
print(root_ridder)

-----------------
Original output:
0.739085133215

Executed output:
0.7390851332151608

-------------------------------------------
Source Code of a Unmatched Cell 6
-------------------------------------------
# Newton-Raphson method - needs the function, its derivative and root bracketing interval
root_newton = newtonRaphson(f,df,0.,1.)
print(root_newton)

-----------------
Original output:
0.739085133501

Executed output:
0.7390851327678811

-------------------------------------------
Source Code of a Unmatched Cell 7
-------------------------------------------
# Internal ('fsolve') routine - needs the function and a rough estimate of the root only
# (plus some optional arguments - e.g. tolerance, see help for details)
root_solve=sci.optimize.fsolve(f,0.5)
print(root_solve)

-----------------
Original output:
[ 0.73908513]

Executed output:
[0.73908513]

-------------------------------------------
Source Code of a Unmatched Cell 11
-------------------------------------------
# Call solver - requires the vector of functions and the vector of initial conditions, 
# as well as an optional tolerance
roots=newtonRaphson2(f,x0,tol=1.e-9)
print(roots)
roots_solve=sci.optimize.fsolve(f,x0)
print(roots_solve)

-----------------
Original output:
[ 0.61803399  1.61803399]
[ 0.61803399  1.61803399]

Executed output:
[0.61803399 1.61803399]
[0.61803399 1.61803399]

