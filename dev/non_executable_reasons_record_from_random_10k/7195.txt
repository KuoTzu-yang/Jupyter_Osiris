3.6
Executability                            : True
Reproducibility                          : number of matched cells: 8 ; number of cells: 11
Reproducibility                          : matched ratio: 0.727 ; index of matched cells: [0, 1, 2, 3, 5, 7, 8, 9]
-------------------------------------------
Source Code of a Unmatched Cell 4
-------------------------------------------
u, s, v_T = np.linalg.svd(J)
print('Singular values of J: {}'.format(s))
print('U:',u.shape,'\n', u)
print('S:\n', s)
print('V_T:\n', v_T)

-----------------
Original output:
Singular values of J: [14.35521602  0.89236222  0.03824324]
U: (3, 3) 
 [[-0.37718109  0.92613517 -0.00284064]
 [-0.64579717 -0.26520566 -0.71596926]
 [-0.66383767 -0.26821559  0.69812603]]
S:
 [14.35521602  0.89236222  0.03824324]
V_T:
 [[-3.04590982e-01 -4.22096419e-01 -5.39601855e-01 -6.61731657e-01]
 [-7.85499550e-01 -3.45416012e-01  9.46675270e-02  5.04694259e-01]
 [ 3.51494130e-01 -1.89356082e-01 -7.30206293e-01  5.54432070e-01]
 [-4.08248290e-01  8.16496581e-01 -4.08248290e-01  1.15395114e-14]]

Executed output:
Singular values of J: [14.35521602  0.89236222  0.03824324]
U: (3, 3) 
 [[-0.37718109  0.92613517 -0.00284064]
 [-0.64579717 -0.26520566 -0.71596926]
 [-0.66383767 -0.26821559  0.69812603]]
S:
 [14.35521602  0.89236222  0.03824324]
V_T:
 [[-3.04590982e-01 -4.22096419e-01 -5.39601855e-01 -6.61731657e-01]
 [-7.85499550e-01 -3.45416012e-01  9.46675270e-02  5.04694259e-01]
 [ 3.51494130e-01 -1.89356082e-01 -7.30206293e-01  5.54432070e-01]
 [-4.08248290e-01  8.16496581e-01 -4.08248290e-01  1.38896443e-14]]

-------------------------------------------
Source Code of a Unmatched Cell 6
-------------------------------------------
# V * 1/sigma * U_T
u, s, v_T = np.linalg.svd(J)
print(u)
print(np.transpose(u))
cond = tol
rank = np.sum(s > cond * np.max(s))
print(rank)
print((u[:,:rank]))
s_1 = np.array([1.0 / x for x in s[:rank]])
print(v_T)
print(v_T[:rank])
v = np.transpose(v_T[:rank])
print(v)
u_T = np.transpose(u[:,:rank])
s_1 = np.diag(s_1)
J_inv = np.dot(v,np.dot(s_1,u_T))
print(J_inv)

-----------------
Original output:
[[-0.37718109  0.92613517 -0.00284064]
 [-0.64579717 -0.26520566 -0.71596926]
 [-0.66383767 -0.26821559  0.69812603]]
[[-0.37718109 -0.64579717 -0.66383767]
 [ 0.92613517 -0.26520566 -0.26821559]
 [-0.00284064 -0.71596926  0.69812603]]
2
[[-0.37718109  0.92613517]
 [-0.64579717 -0.26520566]
 [-0.66383767 -0.26821559]]
[[-3.04590982e-01 -4.22096419e-01 -5.39601855e-01 -6.61731657e-01]
 [-7.85499550e-01 -3.45416012e-01  9.46675270e-02  5.04694259e-01]
 [ 3.51494130e-01 -1.89356082e-01 -7.30206293e-01  5.54432070e-01]
 [-4.08248290e-01  8.16496581e-01 -4.08248290e-01  1.15395114e-14]]
[[-0.30459098 -0.42209642 -0.53960185 -0.66173166]
 [-0.78549955 -0.34541601  0.09466753  0.50469426]]
[[-0.30459098 -0.78549955]
 [-0.42209642 -0.34541601]
 [-0.53960185  0.09466753]
 [-0.66173166  0.50469426]]
[[-0.80722502  0.24714921  0.25018148]
 [-0.34739834  0.12164476  0.1233403 ]
 [ 0.11242833 -0.00385969 -0.00350087]
 [ 0.54118216 -0.12022337 -0.12109409]]

Executed output:
[[-0.37718109  0.92613517 -0.00284064]
 [-0.64579717 -0.26520566 -0.71596926]
 [-0.66383767 -0.26821559  0.69812603]]
[[-0.37718109 -0.64579717 -0.66383767]
 [ 0.92613517 -0.26520566 -0.26821559]
 [-0.00284064 -0.71596926  0.69812603]]
2
[[-0.37718109  0.92613517]
 [-0.64579717 -0.26520566]
 [-0.66383767 -0.26821559]]
[[-3.04590982e-01 -4.22096419e-01 -5.39601855e-01 -6.61731657e-01]
 [-7.85499550e-01 -3.45416012e-01  9.46675270e-02  5.04694259e-01]
 [ 3.51494130e-01 -1.89356082e-01 -7.30206293e-01  5.54432070e-01]
 [-4.08248290e-01  8.16496581e-01 -4.08248290e-01  1.38896443e-14]]
[[-0.30459098 -0.42209642 -0.53960185 -0.66173166]
 [-0.78549955 -0.34541601  0.09466753  0.50469426]]
[[-0.30459098 -0.78549955]
 [-0.42209642 -0.34541601]
 [-0.53960185  0.09466753]
 [-0.66173166  0.50469426]]
[[-0.80722502  0.24714921  0.25018148]
 [-0.34739834  0.12164476  0.1233403 ]
 [ 0.11242833 -0.00385969 -0.00350087]
 [ 0.54118216 -0.12022337 -0.12109409]]

-------------------------------------------
Source Code of a Unmatched Cell 10
-------------------------------------------
m, n = 3, 4
a = np.random.randn(m, n) + np.random.randn(m, n)
print('a:',a.shape, '\n', a)
#calculate the svd
U, s, Vh = np.linalg.svd(a)
print('U:',U.shape, '\n', U)
print('s:',s.shape,'\n', s)
print('Vh:',Vh.shape,'\n', Vh)

#now print reconstitue sigma
sigma = np.zeros((m, n))
for i in range(min(m, n)):
    sigma[i, i] = s[i]
print('sigma:',sigma.shape,'\n', sigma)
#now do U*Sigma*Vh, to get the original matrix.
a1 = np.dot(U, np.dot(sigma, Vh))
print("Original Matrix: ",a1)
np.allclose(a, a1)

-----------------
Original output:
a: (3, 4) 
 [[-2.94023272 -1.15078239  3.54916221  1.78311643]
 [ 1.11097857  0.04296407  1.0619762  -0.7388133 ]
 [ 1.53630613 -0.88239209  0.51418481  0.06865424]]
U: (3, 3) 
 [[-0.99633653 -0.08397837  0.01616037]
 [ 0.04434186 -0.66887709 -0.74204935]
 [ 0.0731254  -0.73861429  0.67015044]]
s: (3,) 
 [5.08899458 2.27840174 0.98694197]
Vh: (4, 4) 
 [[ 0.60740232  0.21299814 -0.67822237 -0.35455413]
 [-0.71582188  0.31585763 -0.609273    0.12891628]
 [ 0.15972576 -0.65030568 -0.39121025  0.631304  ]
 [ 0.30520344  0.65724293  0.12552038  0.67758927]]
sigma: (3, 4) 
 [[5.08899458 0.         0.         0.        ]
 [0.         2.27840174 0.         0.        ]
 [0.         0.         0.98694197 0.        ]]
Original Matrix:  [[-2.94023272 -1.15078239  3.54916221  1.78311643]
 [ 1.11097857  0.04296407  1.0619762  -0.7388133 ]
 [ 1.53630613 -0.88239209  0.51418481  0.06865424]]
True
Executed output:
a: (3, 4) 
 [[-1.17845452 -0.79945424 -0.8096567  -1.72309556]
 [-1.77061936  0.27225885 -0.2337587   0.21393303]
 [ 0.45902719  0.85125813  1.08237769  1.91629604]]
U: (3, 3) 
 [[-0.70163295 -0.07668586  0.70839994]
 [-0.18278622 -0.94155185 -0.28296522]
 [ 0.68869471 -0.32802347  0.64660669]]
s: (3,) 
 [3.37533274 1.81645326 0.22094683]
Vh: (4, 4) 
 [[ 0.43451033  0.32512802  0.40180853  0.73759234]
 [ 0.88465201 -0.26109762 -0.04011121 -0.38420039]
 [-0.16738582 -0.42066194  0.87105788 -0.19048277]
 [-0.02394942 -0.80570673 -0.27964114  0.52159747]]
sigma: (3, 4) 
 [[3.37533274 0.         0.         0.        ]
 [0.         1.81645326 0.         0.        ]
 [0.         0.         0.22094683 0.        ]]
Original Matrix:  [[-1.17845452 -0.79945424 -0.8096567  -1.72309556]
 [-1.77061936  0.27225885 -0.2337587   0.21393303]
 [ 0.45902719  0.85125813  1.08237769  1.91629604]]
True
