3.6
Executability                            : True
Reproducibility                          : number of matched cells: 7 ; number of cells: 11
Reproducibility                          : matched ratio: 0.636 ; index of matched cells: [1, 3, 4, 5, 6, 7, 8]
-------------------------------------------
Source Code of a Unmatched Cell 0
-------------------------------------------
len

-----------------
Original output:
<function len>
Executed output:
<function len(obj, /)>
-------------------------------------------
Source Code of a Unmatched Cell 2
-------------------------------------------
x = 50
print(locals())

def func():
    print(locals())
    global x
    print('this function is now using the global x!')
    print('because of global x is: ', x)
    x = 2
    print('ran func(), changed global x to',x)
    
print('before calling func(), x is: ', x)
func()
print('value of x (outside of func()) is: ', x)

-----------------
Original output:
{'__name__': '__main__', '__doc__': 'Automatically created module for IPython interactive environment', '__package__': None, '__loader__': None, '__spec__': None, '__builtin__': <module 'builtins' (built-in)>, '__builtins__': <module 'builtins' (built-in)>, '_ih': ['', "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    print(name)\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", 'len', "name = 'this is a global name'\n\ndef greet(name):\n    print('name')\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print('name')\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "name = 'this is a global name'\n\ndef greet():\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "x = 50\n\ndef fun():\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\n\ndef func():\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\n\ndef func():\n    print(globals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\nprint(locals())\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)"], '_oh': {4: <built-in function len>}, '_dh': ['C:\\Users\\richa\\Portable Apps\\WinPython-64bit-3.6.1.0Qt5\\notebooks\\Python-Bootcamp_my_code'], '_sh': <module 'IPython.core.shadowns' from 'C:\\Users\\richa\\Portable Apps\\WinPython-64bit-3.6.1.0Qt5\\python-3.6.1.amd64\\lib\\site-packages\\IPython\\core\\shadowns.py'>, 'In': ['', "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    print(name)\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", 'len', "name = 'this is a global name'\n\ndef greet(name):\n    print('name')\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print('name')\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "name = 'this is a global name'\n\ndef greet():\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "x = 50\n\ndef fun():\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\n\ndef func():\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\n\ndef func():\n    print(globals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", "x = 50\nprint(locals())\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)"], 'Out': {4: <built-in function len>}, 'get_ipython': <bound method InteractiveShell.get_ipython of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x00000216B15F5860>>, 'exit': <IPython.core.autocall.ZMQExitAutocall object at 0x00000216B16FB7F0>, 'quit': <IPython.core.autocall.ZMQExitAutocall object at 0x00000216B16FB7F0>, '_': <built-in function len>, '__': '', '___': '', '_i': "x = 50\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", '_ii': "x = 50\n\ndef func():\n    print(globals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", '_iii': "x = 50\n\ndef func():\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", '_i1': "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", 'name': 'this is a global name', 'greet': <function greet at 0x00000216B2860EA0>, '_i2': "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    print(name)\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", '_i3': "name = 'this is a global name'\n\ndef greet():\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", '_i4': 'len', '_4': <built-in function len>, '_i5': "name = 'this is a global name'\n\ndef greet(name):\n    print('name')\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", '_i6': "name = 'this is a global name'\n\ndef greet(name):\n    print('name')\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", '_i7': "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", '_i8': "name = 'this is a global name'\n\ndef greet():\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", '_i9': "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet()\nprint(name)", '_i10': "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", '_i11': "x = 50\n\ndef fun():\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", 'x': 50, 'fun': <function fun at 0x00000216B28171E0>, '_i12': "x = 50\n\ndef func():\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", 'func': <function func at 0x00000216B28600D0>, '_i13': "x = 50\n\ndef func():\n    print(globals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", '_i14': "x = 50\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", '_i15': "x = 50\nprint(locals())\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)"}
before calling func(), x is:  50
{}
this function is now using the global x!
because of global x is:  50
ran func(), changed global x to 2
value of x (outside of func()) is:  2

Executed output:
{'__name__': '__main__', '__doc__': 'Automatically created module for IPython interactive environment', '__package__': None, '__loader__': None, '__spec__': None, '__builtin__': <module 'builtins' (built-in)>, '__builtins__': <module 'builtins' (built-in)>, '_ih': ['', "import warnings\nwarnings.filterwarnings('ignore')\nlen", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "x = 50\nprint(locals())\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)"], '_oh': {1: <built-in function len>}, '_dh': ['/mnt/fit-Knowledgezoo/Github_repos_download/data/rkburnside@python/Complete Python Bootcamp - Rich'], 'In': ['', "import warnings\nwarnings.filterwarnings('ignore')\nlen", "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", "x = 50\nprint(locals())\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)"], 'Out': {1: <built-in function len>}, 'get_ipython': <bound method InteractiveShell.get_ipython of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x7f5f7dc45a20>>, 'exit': <IPython.core.autocall.ZMQExitAutocall object at 0x7f5f7dc18b00>, 'quit': <IPython.core.autocall.ZMQExitAutocall object at 0x7f5f7dc18b00>, '_': <built-in function len>, '__': '', '___': '', '_i': "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", '_ii': "import warnings\nwarnings.filterwarnings('ignore')\nlen", '_iii': '', '_i1': "import warnings\nwarnings.filterwarnings('ignore')\nlen", 'warnings': <module 'warnings' from '/home/dabao/anaconda3/envs/Osiris_py36/lib/python3.6/warnings.py'>, '_1': <built-in function len>, '_i2': "name = 'this is a global name'\n\ndef greet(name):\n    print(name)\n    # enclosing function\n    name = 'sammy'\n    \n    def hello():\n        print('hello'+name)\n    \n    hello()\ngreet(name)\nprint(name)", 'name': 'this is a global name', 'greet': <function greet at 0x7f5f7c3177b8>, '_i3': "x = 50\nprint(locals())\n\ndef func():\n    print(locals())\n    global x\n    print('this function is now using the global x!')\n    print('because of global x is: ', x)\n    x = 2\n    print('ran func(), changed global x to',x)\n    \nprint('before calling func(), x is: ', x)\nfunc()\nprint('value of x (outside of func()) is: ', x)", 'x': 50}
before calling func(), x is:  50
{}
this function is now using the global x!
because of global x is:  50
ran func(), changed global x to 2
value of x (outside of func()) is:  2

-------------------------------------------
Source Code of a Unmatched Cell 9
-------------------------------------------


-----------------
Original output:
2
Executed output:
[1, 2, 3, 4, 5]

-------------------------------------------
Source Code of a Unmatched Cell 10
-------------------------------------------
lst = [1,2,1,1,2,2,3,3,3,3,4,5]

x = []

for i in lst:
    if i not in x:
        x.append(i)
print(x)        



-----------------
Original output:
[1, 2, 3, 4, 5]

Executed output:
2
