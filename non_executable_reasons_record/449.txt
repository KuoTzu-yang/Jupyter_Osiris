3.5
An error occurred while executing the following cell:
------------------
y = y1 <= 5 # is the rating <= 5?
# plot histograms of original target variable
# and aggregated target variable
plt.figure(figsize=(20,5));
plt.subplot(1, 2, 1 );
plt.hist(y1);
plt.xlabel('original target value')
plt.ylabel('count')
plt.subplot(1, 2, 2);
plt.hist(y)
plt.xlabel('aggregated target value')
plt.show()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyError[0m                                  Traceback (most recent call last)
[0;32m~/miniconda3/envs/Osiris_py35/lib/python3.5/site-packages/numpy/lib/histograms.py[0m in [0;36m_unsigned_subtract[0;34m(a, b)[0m
[1;32m    279[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0m
[0;32m--> 280[0;31m         [0mdt[0m [0;34m=[0m [0msigned_to_unsigned[0m[0;34m[[0m[0mdt[0m[0;34m.[0m[0mtype[0m[0;34m][0m[0;34m[0m[0m
[0m[1;32m    281[0m     [0;32mexcept[0m [0mKeyError[0m[0;34m:[0m[0;34m[0m[0m

[0;31mKeyError[0m: <class 'numpy.bool_'>

During handling of the above exception, another exception occurred:

[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-3-583f68047d81>[0m in [0;36m<module>[0;34m()[0m
[1;32m      8[0m [0mplt[0m[0;34m.[0m[0mylabel[0m[0;34m([0m[0;34m'count'[0m[0;34m)[0m[0;34m[0m[0m
[1;32m      9[0m [0mplt[0m[0;34m.[0m[0msubplot[0m[0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m2[0m[0;34m,[0m [0;36m2[0m[0;34m)[0m[0;34m;[0m[0;34m[0m[0m
[0;32m---> 10[0;31m [0mplt[0m[0;34m.[0m[0mhist[0m[0;34m([0m[0my[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     11[0m [0mplt[0m[0;34m.[0m[0mxlabel[0m[0;34m([0m[0;34m'aggregated target value'[0m[0;34m)[0m[0;34m[0m[0m
[1;32m     12[0m [0mplt[0m[0;34m.[0m[0mshow[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/Osiris_py35/lib/python3.5/site-packages/matplotlib/pyplot.py[0m in [0;36mhist[0;34m(x, bins, range, density, weights, cumulative, bottom, histtype, align, orientation, rwidth, log, color, label, stacked, normed, data, **kwargs)[0m
[1;32m   2617[0m         [0malign[0m[0;34m=[0m[0malign[0m[0;34m,[0m [0morientation[0m[0;34m=[0m[0morientation[0m[0;34m,[0m [0mrwidth[0m[0;34m=[0m[0mrwidth[0m[0;34m,[0m [0mlog[0m[0;34m=[0m[0mlog[0m[0;34m,[0m[0;34m[0m[0m
[1;32m   2618[0m         [0mcolor[0m[0;34m=[0m[0mcolor[0m[0;34m,[0m [0mlabel[0m[0;34m=[0m[0mlabel[0m[0;34m,[0m [0mstacked[0m[0;34m=[0m[0mstacked[0m[0;34m,[0m [0mnormed[0m[0;34m=[0m[0mnormed[0m[0;34m,[0m[0;34m[0m[0m
[0;32m-> 2619[0;31m         data=data, **kwargs)
[0m[1;32m   2620[0m [0;34m[0m[0m
[1;32m   2621[0m [0;31m# Autogenerated by boilerplate.py.  Do not edit as changes will be lost.[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/Osiris_py35/lib/python3.5/site-packages/matplotlib/__init__.py[0m in [0;36minner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1783[0m                         [0;34m"the Matplotlib list!)"[0m [0;34m%[0m [0;34m([0m[0mlabel_namer[0m[0;34m,[0m [0mfunc[0m[0;34m.[0m[0m__name__[0m[0;34m)[0m[0;34m,[0m[0;34m[0m[0m
[1;32m   1784[0m                         RuntimeWarning, stacklevel=2)
[0;32m-> 1785[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0max[0m[0;34m,[0m [0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m   1786[0m [0;34m[0m[0m
[1;32m   1787[0m         inner.__doc__ = _add_data_doc(inner.__doc__,

[0;32m~/miniconda3/envs/Osiris_py35/lib/python3.5/site-packages/matplotlib/axes/_axes.py[0m in [0;36mhist[0;34m(self, x, bins, range, density, weights, cumulative, bottom, histtype, align, orientation, rwidth, log, color, label, stacked, normed, **kwargs)[0m
[1;32m   6567[0m             [0;31m# this will automatically overwrite bins,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   6568[0m             [0;31m# so that each histogram uses the same bins[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 6569[0;31m             [0mm[0m[0;34m,[0m [0mbins[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mhistogram[0m[0;34m([0m[0mx[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0mbins[0m[0;34m,[0m [0mweights[0m[0;34m=[0m[0mw[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0;34m**[0m[0mhist_kwargs[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m   6570[0m             [0mm[0m [0;34m=[0m [0mm[0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mfloat[0m[0;34m)[0m  [0;31m# causes problems later if it's an int[0m[0;34m[0m[0m
[1;32m   6571[0m             [0;32mif[0m [0mmlast[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/Osiris_py35/lib/python3.5/site-packages/numpy/lib/histograms.py[0m in [0;36mhistogram[0;34m(a, bins, range, normed, weights, density)[0m
[1;32m    730[0m [0;34m[0m[0m
[1;32m    731[0m         [0;31m# Pre-compute histogram scaling factor[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 732[0;31m         [0mnorm[0m [0;34m=[0m [0mn_equal_bins[0m [0;34m/[0m [0m_unsigned_subtract[0m[0;34m([0m[0mlast_edge[0m[0;34m,[0m [0mfirst_edge[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m    733[0m [0;34m[0m[0m
[1;32m    734[0m         [0;31m# We iterate over blocks here for two reasons: the first is that for[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/miniconda3/envs/Osiris_py35/lib/python3.5/site-packages/numpy/lib/histograms.py[0m in [0;36m_unsigned_subtract[0;34m(a, b)[0m
[1;32m    280[0m         [0mdt[0m [0;34m=[0m [0msigned_to_unsigned[0m[0;34m[[0m[0mdt[0m[0;34m.[0m[0mtype[0m[0;34m][0m[0;34m[0m[0m
[1;32m    281[0m     [0;32mexcept[0m [0mKeyError[0m[0;34m:[0m[0;34m[0m[0m
[0;32m--> 282[0;31m         [0;32mreturn[0m [0mnp[0m[0;34m.[0m[0msubtract[0m[0;34m([0m[0ma[0m[0;34m,[0m [0mb[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mdt[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m    283[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0m
[1;32m    284[0m         [0;31m# we know the inputs are integers, and we are deliberately casting[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: numpy boolean subtract, the `-` operator, is deprecated, use the bitwise_xor, the `^` operator, or the logical_xor function instead.
TypeError: numpy boolean subtract, the `-` operator, is deprecated, use the bitwise_xor, the `^` operator, or the logical_xor function instead.

Executability                            : False
