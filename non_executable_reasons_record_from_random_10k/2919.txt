3.6
An error occurred while executing the following cell:
------------------
import warnings
warnings.filterwarnings('ignore')
import turtle
import random
import datetime
from time import sleep


# setup the window with a background colour
wn = turtle.Screen()
wn.bgcolor("cyan")

# create the turtles for displaying the time
secondTurtle = turtle.Turtle()
minuteTurtle = turtle.Turtle()
hourTurtle = turtle.Turtle()

# get the current time
currentTime=datetime.datetime.now().time()

minuteTurtle.shape("circle")
minuteTurtle.color("blue")
hourTurtle.shape("square")
hourTurtle.color("yellow")
secondTurtle.shape("triangle")
secondTurtle.color("red")

# raise pens for all turtles
secondTurtle.penup()
minuteTurtle.penup()
hourTurtle.penup()

# move the turtles to different locations on the screen
secondTurtle.goto(0,0)
minuteTurtle.goto(-200,0)
hourTurtle.goto(-100,-100)

# set orientation for all turtles
secondTurtle.setheading(90)
minuteTurtle.setheading(90)
hourTurtle.setheading(90)

# set the size of all turtles
secondTurtle.shapesize(0.5,0.5,0.5) 
minuteTurtle.shapesize(7) 
hourTurtle.shapesize(10,10)

minuteTurtle.rt((currentTime.minute*6)-(90-minuteTurtle.heading()))
hourTurtle.rt((currentTime.hour*30)-(90-hourTurtle.heading()))
    
for count in range(0,100):
    sfcolor = ["white", "blue", "purple", "grey", "magenta"]
    secondTurtle.color(random.choice(sfcolor))
    secondTurtle.penup()
    secondTurtle.goto(0,0)
    secondTurtle.rt(currentTime.second*6)
    secondTurtle.fd(currentTime.minute*6)
    secondTurtle.pendown()
    secondTurtle.circle(5)

# define the previous value of time as the currentTime
prevSecond=currentTime.second
prevMinute=currentTime.minute
prevHour=currentTime.hour


# in each second update the size of all the turtles
for i in range(0,100):
	currentTime=datetime.datetime.now().time()
	currentSecond=currentTime.second
	currentMinute=currentTime.minute
	currentHour=currentTime.hour
	
	if (currentSecond != prevSecond):
		secondTurtle.color(random.choice(sfcolor))
		secondTurtle.penup()
		secondTurtle.rt(currentTime.second*6)
		secondTurtle.pendown()
		secondTurtle.fd(currentTime.minute*6)
		secondTurtle.pendown()
		secondTurtle.circle(5)
	
	if (currentMinute != prevMinute):	
		minuteTurtle.shapesize((currentTime.minute*(10/60)))
		
	if (currentHour != prevHour):
		hourTurtle.shapesize((currentTime.hour*(10/12)))
	
	prevSecond=currentTime.second
	prevMinute=currentTime.minute
	prevHour=currentTime.hour
	
	sleep(1)
	

# add this line to prevent the window from closing when the programme finishes executing
win=turtle.Screen(); win.exitonclick()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTclError[0m                                  Traceback (most recent call last)
[0;32m<ipython-input-1-52361ae19c96>[0m in [0;36m<module>[0;34m[0m
[1;32m      8[0m [0;34m[0m[0m
[1;32m      9[0m [0;31m# setup the window with a background colour[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 10[0;31m [0mwn[0m [0;34m=[0m [0mturtle[0m[0;34m.[0m[0mScreen[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     11[0m [0mwn[0m[0;34m.[0m[0mbgcolor[0m[0;34m([0m[0;34m"cyan"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     12[0m [0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/turtle.py[0m in [0;36mScreen[0;34m()[0m
[1;32m   3660[0m     else return the existing one."""
[1;32m   3661[0m     [0;32mif[0m [0mTurtle[0m[0;34m.[0m[0m_screen[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3662[0;31m         [0mTurtle[0m[0;34m.[0m[0m_screen[0m [0;34m=[0m [0m_Screen[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3663[0m     [0;32mreturn[0m [0mTurtle[0m[0;34m.[0m[0m_screen[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3664[0m [0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/turtle.py[0m in [0;36m__init__[0;34m(self)[0m
[1;32m   3676[0m         [0;31m# preserved (perhaps by passing it as an optional parameter)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3677[0m         [0;32mif[0m [0m_Screen[0m[0;34m.[0m[0m_root[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3678[0;31m             [0m_Screen[0m[0;34m.[0m[0m_root[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_root[0m [0;34m=[0m [0m_Root[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3679[0m             [0mself[0m[0;34m.[0m[0m_root[0m[0;34m.[0m[0mtitle[0m[0;34m([0m[0m_Screen[0m[0;34m.[0m[0m_title[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3680[0m             [0mself[0m[0;34m.[0m[0m_root[0m[0;34m.[0m[0mondestroy[0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_destroy[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/turtle.py[0m in [0;36m__init__[0;34m(self)[0m
[1;32m    432[0m     [0;34m"""Root class for Screen based on Tkinter."""[0m[0;34m[0m[0;34m[0m[0m
[1;32m    433[0m     [0;32mdef[0m [0m__init__[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 434[0;31m         [0mTK[0m[0;34m.[0m[0mTk[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    435[0m [0;34m[0m[0m
[1;32m    436[0m     [0;32mdef[0m [0msetupcanvas[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mwidth[0m[0;34m,[0m [0mheight[0m[0;34m,[0m [0mcwidth[0m[0;34m,[0m [0mcheight[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/tkinter/__init__.py[0m in [0;36m__init__[0;34m(self, screenName, baseName, className, useTk, sync, use)[0m
[1;32m   2021[0m                 [0mbaseName[0m [0;34m=[0m [0mbaseName[0m [0;34m+[0m [0mext[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2022[0m         [0minteractive[0m [0;34m=[0m [0;36m0[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2023[0;31m         [0mself[0m[0;34m.[0m[0mtk[0m [0;34m=[0m [0m_tkinter[0m[0;34m.[0m[0mcreate[0m[0;34m([0m[0mscreenName[0m[0;34m,[0m [0mbaseName[0m[0;34m,[0m [0mclassName[0m[0;34m,[0m [0minteractive[0m[0;34m,[0m [0mwantobjects[0m[0;34m,[0m [0museTk[0m[0;34m,[0m [0msync[0m[0;34m,[0m [0muse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2024[0m         [0;32mif[0m [0museTk[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2025[0m             [0mself[0m[0;34m.[0m[0m_loadtk[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mTclError[0m: no display name and no $DISPLAY environment variable
TclError: no display name and no $DISPLAY environment variable

Executability                            : False
