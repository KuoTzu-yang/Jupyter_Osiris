3.6
Executability                            : True
Reproducibility                          : number of matched cells: 4 ; number of cells: 7
Reproducibility                          : matched ratio: 0.571 ; index of matched cells: [0, 1, 3, 5]
-------------------------------------------
Source Code of a Unmatched Cell 2
-------------------------------------------
%%time
def totlen(n, a):
    a = sorted(a)
    for i in range(n - 1, 0, -1):
        for j in range(i - 1, 0, -1):
            for k in range(j - 1, 0, -1):
                if a[i] < a[j] + a[k]:
                    return a[i] + a[j] + a[k]
    return 0

print(totlen(n, a))

-----------------
Original output:
0
CPU times: user 0 ns, sys: 4 ms, total: 4 ms
Wall time: 380 µs

Executed output:
0
CPU times: user 427 µs, sys: 61 µs, total: 488 µs
Wall time: 371 µs

-------------------------------------------
Source Code of a Unmatched Cell 4
-------------------------------------------
%%time
print(max([min(p,  L - p) for p in x]), max([max(p,  L - p) for p in x]))

-----------------
Original output:
4 8
CPU times: user 0 ns, sys: 0 ns, total: 0 ns
Wall time: 147 µs

Executed output:
4 8
CPU times: user 276 µs, sys: 41 µs, total: 317 µs
Wall time: 221 µs

-------------------------------------------
Source Code of a Unmatched Cell 6
-------------------------------------------
%%time
k2 = set(v1 + v2 for v1 in k for v2 in k) # O(n^2)
if m in set(v1 + v2 for v1 in k2 for v2 in k2):
    print('Yes')
else:
    print('No')

-----------------
Original output:
Yes
CPU times: user 0 ns, sys: 0 ns, total: 0 ns
Wall time: 303 µs

Executed output:
Yes
CPU times: user 237 µs, sys: 36 µs, total: 273 µs
Wall time: 196 µs

