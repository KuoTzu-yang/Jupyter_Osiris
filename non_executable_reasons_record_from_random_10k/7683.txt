3.6
An error occurred while executing the following cell:
------------------
from numba import cuda
from numba.cuda.random import create_xoroshiro128p_states, xoroshiro128p_uniform_float32
import numpy as np

@cuda.jit
def compute_pi(rng_states, iterations, out):
    """Find the maximum value in values and store in result[0]"""
    thread_id = cuda.grid(1)

    # Compute pi by drawing random (x, y) points and finding what
    # fraction lie inside a unit circle
    inside = 0
    for i in range(iterations):
        x = xoroshiro128p_uniform_float32(rng_states, thread_id)
        y = xoroshiro128p_uniform_float32(rng_states, thread_id)
        if x**2 + y**2 <= 1.0:
            inside += 1

    out[thread_id] = 4.0 * inside / iterations

threads_per_block = 64*4*4
blocks = 24*4*4
rng_states = create_xoroshiro128p_states(threads_per_block * blocks, seed=1)
out = np.zeros(threads_per_block * blocks, dtype=np.float32)

compute_pi[blocks, threads_per_block](rng_states, 10000, out)
print('pi:', out.mean())
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mCudaSupportError[0m                          Traceback (most recent call last)
[0;32m<ipython-input-9-d1f94ac43c2f>[0m in [0;36m<module>[0;34m[0m
[1;32m     21[0m [0mthreads_per_block[0m [0;34m=[0m [0;36m64[0m[0;34m*[0m[0;36m4[0m[0;34m*[0m[0;36m4[0m[0;34m[0m[0;34m[0m[0m
[1;32m     22[0m [0mblocks[0m [0;34m=[0m [0;36m24[0m[0;34m*[0m[0;36m4[0m[0;34m*[0m[0;36m4[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 23[0;31m [0mrng_states[0m [0;34m=[0m [0mcreate_xoroshiro128p_states[0m[0;34m([0m[0mthreads_per_block[0m [0;34m*[0m [0mblocks[0m[0;34m,[0m [0mseed[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     24[0m [0mout[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mzeros[0m[0;34m([0m[0mthreads_per_block[0m [0;34m*[0m [0mblocks[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mnp[0m[0;34m.[0m[0mfloat32[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     25[0m [0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/site-packages/numba/cuda/random.py[0m in [0;36mcreate_xoroshiro128p_states[0;34m(n, seed, subsequence_start, stream)[0m
[1;32m    278[0m     [0;34m:[0m[0mparam[0m [0mstream[0m[0;34m:[0m [0mstream[0m [0mto[0m [0mrun[0m [0minitialization[0m [0mkernel[0m [0mon[0m[0;34m[0m[0;34m[0m[0m
[1;32m    279[0m     '''
[0;32m--> 280[0;31m     [0mstates[0m [0;34m=[0m [0mcuda[0m[0;34m.[0m[0mdevice_array[0m[0;34m([0m[0mn[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mxoroshiro128p_dtype[0m[0;34m,[0m [0mstream[0m[0;34m=[0m[0mstream[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    281[0m     [0minit_xoroshiro128p_states[0m[0;34m([0m[0mstates[0m[0;34m,[0m [0mseed[0m[0;34m,[0m [0msubsequence_start[0m[0;34m,[0m [0mstream[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    282[0m     [0;32mreturn[0m [0mstates[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/site-packages/numba/cuda/cudadrv/devices.py[0m in [0;36m_require_cuda_context[0;34m(*args, **kws)[0m
[1;32m    220[0m     [0;34m@[0m[0mfunctools[0m[0;34m.[0m[0mwraps[0m[0;34m([0m[0mfn[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    221[0m     [0;32mdef[0m [0m_require_cuda_context[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkws[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 222[0;31m         [0;32mwith[0m [0m_runtime[0m[0;34m.[0m[0mensure_context[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    223[0m             [0;32mreturn[0m [0mfn[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkws[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    224[0m [0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/contextlib.py[0m in [0;36m__enter__[0;34m(self)[0m
[1;32m     79[0m     [0;32mdef[0m [0m__enter__[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     80[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 81[0;31m             [0;32mreturn[0m [0mnext[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mgen[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     82[0m         [0;32mexcept[0m [0mStopIteration[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     83[0m             [0;32mraise[0m [0mRuntimeError[0m[0;34m([0m[0;34m"generator didn't yield"[0m[0;34m)[0m [0;32mfrom[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/site-packages/numba/cuda/cudadrv/devices.py[0m in [0;36mensure_context[0;34m(self)[0m
[1;32m    120[0m         [0many[0m [0mtop[0m[0;34m-[0m[0mlevel[0m [0mNumba[0m [0mCUDA[0m [0mAPI[0m[0;34m.[0m[0;34m[0m[0;34m[0m[0m
[1;32m    121[0m         """
[0;32m--> 122[0;31m         [0;32mwith[0m [0mdriver[0m[0;34m.[0m[0mget_active_context[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    123[0m             [0moldctx[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_attached_context[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    124[0m             [0mnewctx[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mget_or_create_context[0m[0;34m([0m[0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/site-packages/numba/cuda/cudadrv/driver.py[0m in [0;36m__enter__[0;34m(self)[0m
[1;32m    385[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    386[0m             [0mhctx[0m [0;34m=[0m [0mdrvapi[0m[0;34m.[0m[0mcu_context[0m[0;34m([0m[0;36m0[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 387[0;31m             [0mdriver[0m[0;34m.[0m[0mcuCtxGetCurrent[0m[0;34m([0m[0mbyref[0m[0;34m([0m[0mhctx[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    388[0m             [0mhctx[0m [0;34m=[0m [0mhctx[0m [0;32mif[0m [0mhctx[0m[0;34m.[0m[0mvalue[0m [0;32melse[0m [0;32mNone[0m[0;34m[0m[0;34m[0m[0m
[1;32m    389[0m [0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py36/lib/python3.6/site-packages/numba/cuda/cudadrv/driver.py[0m in [0;36m__getattr__[0;34m(self, fname)[0m
[1;32m    276[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0minitialization_error[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    277[0m             raise CudaSupportError("Error at driver init: \n%s:" %
[0;32m--> 278[0;31m                                    self.initialization_error)
[0m[1;32m    279[0m [0;34m[0m[0m
[1;32m    280[0m         [0;31m# Find function in driver library[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mCudaSupportError[0m: Error at driver init: 

CUDA driver library cannot be found.
If you are sure that a CUDA driver is installed,
try setting environment variable NUMBA_CUDA_DRIVER
with the file path of the CUDA driver shared library.
:
CudaSupportError: Error at driver init: 

CUDA driver library cannot be found.
If you are sure that a CUDA driver is installed,
try setting environment variable NUMBA_CUDA_DRIVER
with the file path of the CUDA driver shared library.
:

Executability                            : False
