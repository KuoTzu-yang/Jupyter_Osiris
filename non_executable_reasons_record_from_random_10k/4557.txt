3.4
Executability                            : True
Reproducibility                          : number of matched cells: 40 ; number of cells: 108
Reproducibility                          : matched ratio: 0.37 ; index of matched cells: [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 41, 42, 43, 44, 45, 50, 53, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 77, 78, 97, 98, 99, 100, 101, 102, 103, 104, 105]
-------------------------------------------
Source Code of a Unmatched Cell 6
-------------------------------------------
df

-----------------
Original output:
                   A         B         C         D
2013-01-01  0.926488  0.234746  0.052143  0.174532
2013-01-02 -0.101019  0.056060 -0.330334  2.647630
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
2013-01-04 -1.661714 -0.390470  1.336950 -0.017261
2013-01-05  1.966178  2.463894  1.122488  0.295103
2013-01-06  0.830283 -1.458634  0.518271  0.956375
Executed output:
                   A         B         C         D
2013-01-01  0.301720 -0.559610 -1.448618 -1.297819
2013-01-02 -0.115422  0.498515  0.883877 -0.719448
2013-01-03  0.066064  1.071778  0.269745 -1.691465
2013-01-04 -0.659243  0.484782  0.784944  0.236903
2013-01-05  1.103134  1.093360 -0.835082 -0.663942
2013-01-06 -0.872760  1.243157  0.971718 -0.717127
-------------------------------------------
Source Code of a Unmatched Cell 11
-------------------------------------------
df.head()

-----------------
Original output:
                   A         B         C         D
2013-01-01  0.926488  0.234746  0.052143  0.174532
2013-01-02 -0.101019  0.056060 -0.330334  2.647630
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
2013-01-04 -1.661714 -0.390470  1.336950 -0.017261
2013-01-05  1.966178  2.463894  1.122488  0.295103
Executed output:
                   A         B         C         D
2013-01-01  0.301720 -0.559610 -1.448618 -1.297819
2013-01-02 -0.115422  0.498515  0.883877 -0.719448
2013-01-03  0.066064  1.071778  0.269745 -1.691465
2013-01-04 -0.659243  0.484782  0.784944  0.236903
2013-01-05  1.103134  1.093360 -0.835082 -0.663942
-------------------------------------------
Source Code of a Unmatched Cell 12
-------------------------------------------
df.tail(3)

-----------------
Original output:
                   A         B         C         D
2013-01-04 -1.661714 -0.390470  1.336950 -0.017261
2013-01-05  1.966178  2.463894  1.122488  0.295103
2013-01-06  0.830283 -1.458634  0.518271  0.956375
Executed output:
                   A         B         C         D
2013-01-04 -0.659243  0.484782  0.784944  0.236903
2013-01-05  1.103134  1.093360 -0.835082 -0.663942
2013-01-06 -0.872760  1.243157  0.971718 -0.717127
-------------------------------------------
Source Code of a Unmatched Cell 15
-------------------------------------------
df.values

-----------------
Original output:
array([[ 0.92648849,  0.23474619,  0.05214341,  0.17453243],
       [-0.10101946,  0.05606017, -0.33033439,  2.64763014],
       [ 0.74128411,  1.13499432, -0.82819042, -1.240739  ],
       [-1.6617142 , -0.39046963,  1.33694958, -0.01726102],
       [ 1.96617765,  2.46389417,  1.12248804,  0.29510287],
       [ 0.8302826 , -1.45863408,  0.51827077,  0.95637453]])
Executed output:
array([[ 0.30172017, -0.55961047, -1.44861834, -1.29781926],
       [-0.11542157,  0.49851454,  0.88387733, -0.7194483 ],
       [ 0.06606352,  1.07177771,  0.2697451 , -1.6914655 ],
       [-0.65924322,  0.48478211,  0.7849437 ,  0.23690329],
       [ 1.1031344 ,  1.09336037, -0.83508151, -0.66394233],
       [-0.87275953,  1.24315666,  0.97171815, -0.71712691]])
-------------------------------------------
Source Code of a Unmatched Cell 16
-------------------------------------------
df.describe()

-----------------
Original output:
              A         B         C         D
count  6.000000  6.000000  6.000000  6.000000
mean   0.450250  0.340099  0.311888  0.469273
std    1.226235  1.341888  0.840252  1.285346
min   -1.661714 -1.458634 -0.828190 -1.240739
25%    0.109556 -0.278837 -0.234715  0.030687
50%    0.785783  0.145403  0.285207  0.234818
75%    0.902437  0.909932  0.971434  0.791057
max    1.966178  2.463894  1.336950  2.647630
Executed output:
              A         B         C         D
count  6.000000  6.000000  6.000000  6.000000
mean  -0.029418  0.638663  0.104431 -0.808817
std    0.709471  0.669168  1.014376  0.655607
min   -0.872760 -0.559610 -1.448618 -1.691465
25%   -0.523288  0.488215 -0.558875 -1.153227
50%   -0.024679  0.785146  0.527344 -0.718288
75%    0.242806  1.087965  0.859144 -0.677238
max    1.103134  1.243157  0.971718  0.236903
-------------------------------------------
Source Code of a Unmatched Cell 17
-------------------------------------------
df.T

-----------------
Original output:
   2013-01-01  2013-01-02  2013-01-03  2013-01-04  2013-01-05  2013-01-06
A    0.926488   -0.101019    0.741284   -1.661714    1.966178    0.830283
B    0.234746    0.056060    1.134994   -0.390470    2.463894   -1.458634
C    0.052143   -0.330334   -0.828190    1.336950    1.122488    0.518271
D    0.174532    2.647630   -1.240739   -0.017261    0.295103    0.956375
Executed output:
   2013-01-01  2013-01-02  2013-01-03  2013-01-04  2013-01-05  2013-01-06
A    0.301720   -0.115422    0.066064   -0.659243    1.103134   -0.872760
B   -0.559610    0.498515    1.071778    0.484782    1.093360    1.243157
C   -1.448618    0.883877    0.269745    0.784944   -0.835082    0.971718
D   -1.297819   -0.719448   -1.691465    0.236903   -0.663942   -0.717127
-------------------------------------------
Source Code of a Unmatched Cell 18
-------------------------------------------
df.sort_index(axis=1, ascending=False)

-----------------
Original output:
                   D         C         B         A
2013-01-01  0.174532  0.052143  0.234746  0.926488
2013-01-02  2.647630 -0.330334  0.056060 -0.101019
2013-01-03 -1.240739 -0.828190  1.134994  0.741284
2013-01-04 -0.017261  1.336950 -0.390470 -1.661714
2013-01-05  0.295103  1.122488  2.463894  1.966178
2013-01-06  0.956375  0.518271 -1.458634  0.830283
Executed output:
                   D         C         B         A
2013-01-01 -1.297819 -1.448618 -0.559610  0.301720
2013-01-02 -0.719448  0.883877  0.498515 -0.115422
2013-01-03 -1.691465  0.269745  1.071778  0.066064
2013-01-04  0.236903  0.784944  0.484782 -0.659243
2013-01-05 -0.663942 -0.835082  1.093360  1.103134
2013-01-06 -0.717127  0.971718  1.243157 -0.872760
-------------------------------------------
Source Code of a Unmatched Cell 19
-------------------------------------------
df.sort_values(by='B')

-----------------
Original output:
                   A         B         C         D
2013-01-06  0.830283 -1.458634  0.518271  0.956375
2013-01-04 -1.661714 -0.390470  1.336950 -0.017261
2013-01-02 -0.101019  0.056060 -0.330334  2.647630
2013-01-01  0.926488  0.234746  0.052143  0.174532
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
2013-01-05  1.966178  2.463894  1.122488  0.295103
Executed output:
                   A         B         C         D
2013-01-01  0.301720 -0.559610 -1.448618 -1.297819
2013-01-04 -0.659243  0.484782  0.784944  0.236903
2013-01-02 -0.115422  0.498515  0.883877 -0.719448
2013-01-03  0.066064  1.071778  0.269745 -1.691465
2013-01-05  1.103134  1.093360 -0.835082 -0.663942
2013-01-06 -0.872760  1.243157  0.971718 -0.717127
-------------------------------------------
Source Code of a Unmatched Cell 20
-------------------------------------------
df['A']

-----------------
Original output:
2013-01-01    0.926488
2013-01-02   -0.101019
2013-01-03    0.741284
2013-01-04   -1.661714
2013-01-05    1.966178
2013-01-06    0.830283
Freq: D, Name: A, dtype: float64
Executed output:
2013-01-01    0.301720
2013-01-02   -0.115422
2013-01-03    0.066064
2013-01-04   -0.659243
2013-01-05    1.103134
2013-01-06   -0.872760
Freq: D, Name: A, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 21
-------------------------------------------
df[0:3]

-----------------
Original output:
                   A         B         C         D
2013-01-01  0.926488  0.234746  0.052143  0.174532
2013-01-02 -0.101019  0.056060 -0.330334  2.647630
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
Executed output:
                   A         B         C         D
2013-01-01  0.301720 -0.559610 -1.448618 -1.297819
2013-01-02 -0.115422  0.498515  0.883877 -0.719448
2013-01-03  0.066064  1.071778  0.269745 -1.691465
-------------------------------------------
Source Code of a Unmatched Cell 22
-------------------------------------------
df['20130102':'20130104']

-----------------
Original output:
                   A         B         C         D
2013-01-02 -0.101019  0.056060 -0.330334  2.647630
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
2013-01-04 -1.661714 -0.390470  1.336950 -0.017261
Executed output:
                   A         B         C         D
2013-01-02 -0.115422  0.498515  0.883877 -0.719448
2013-01-03  0.066064  1.071778  0.269745 -1.691465
2013-01-04 -0.659243  0.484782  0.784944  0.236903
-------------------------------------------
Source Code of a Unmatched Cell 23
-------------------------------------------
df.loc[dates[0]]

-----------------
Original output:
A    0.926488
B    0.234746
C    0.052143
D    0.174532
Name: 2013-01-01 00:00:00, dtype: float64
Executed output:
A    0.301720
B   -0.559610
C   -1.448618
D   -1.297819
Name: 2013-01-01 00:00:00, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 24
-------------------------------------------
df.loc[:,['A','B']]

-----------------
Original output:
                   A         B
2013-01-01  0.926488  0.234746
2013-01-02 -0.101019  0.056060
2013-01-03  0.741284  1.134994
2013-01-04 -1.661714 -0.390470
2013-01-05  1.966178  2.463894
2013-01-06  0.830283 -1.458634
Executed output:
                   A         B
2013-01-01  0.301720 -0.559610
2013-01-02 -0.115422  0.498515
2013-01-03  0.066064  1.071778
2013-01-04 -0.659243  0.484782
2013-01-05  1.103134  1.093360
2013-01-06 -0.872760  1.243157
-------------------------------------------
Source Code of a Unmatched Cell 25
-------------------------------------------
df.loc['20130102':'20130104',['A','B']]

-----------------
Original output:
                   A         B
2013-01-02 -0.101019  0.056060
2013-01-03  0.741284  1.134994
2013-01-04 -1.661714 -0.390470
Executed output:
                   A         B
2013-01-02 -0.115422  0.498515
2013-01-03  0.066064  1.071778
2013-01-04 -0.659243  0.484782
-------------------------------------------
Source Code of a Unmatched Cell 26
-------------------------------------------
df.loc['20130102',['A','B']]

-----------------
Original output:
A   -0.101019
B    0.056060
Name: 2013-01-02 00:00:00, dtype: float64
Executed output:
A   -0.115422
B    0.498515
Name: 2013-01-02 00:00:00, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 27
-------------------------------------------
df.loc[dates[0],'A']

-----------------
Original output:
0.92648848696610397
Executed output:
0.30172017196963458
-------------------------------------------
Source Code of a Unmatched Cell 28
-------------------------------------------
# This method is apparently faster than the one above it
df.at[dates[0],'A']

-----------------
Original output:
0.92648848696610397
Executed output:
0.30172017196963458
-------------------------------------------
Source Code of a Unmatched Cell 29
-------------------------------------------
df

-----------------
Original output:
                   A         B         C         D
2013-01-01  0.926488  0.234746  0.052143  0.174532
2013-01-02 -0.101019  0.056060 -0.330334  2.647630
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
2013-01-04 -1.661714 -0.390470  1.336950 -0.017261
2013-01-05  1.966178  2.463894  1.122488  0.295103
2013-01-06  0.830283 -1.458634  0.518271  0.956375
Executed output:
                   A         B         C         D
2013-01-01  0.301720 -0.559610 -1.448618 -1.297819
2013-01-02 -0.115422  0.498515  0.883877 -0.719448
2013-01-03  0.066064  1.071778  0.269745 -1.691465
2013-01-04 -0.659243  0.484782  0.784944  0.236903
2013-01-05  1.103134  1.093360 -0.835082 -0.663942
2013-01-06 -0.872760  1.243157  0.971718 -0.717127
-------------------------------------------
Source Code of a Unmatched Cell 30
-------------------------------------------
df.iloc[3]

-----------------
Original output:
A   -1.661714
B   -0.390470
C    1.336950
D   -0.017261
Name: 2013-01-04 00:00:00, dtype: float64
Executed output:
A   -0.659243
B    0.484782
C    0.784944
D    0.236903
Name: 2013-01-04 00:00:00, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 31
-------------------------------------------
df.iloc[3:5,0:2]

-----------------
Original output:
                   A         B
2013-01-04 -1.661714 -0.390470
2013-01-05  1.966178  2.463894
Executed output:
                   A         B
2013-01-04 -0.659243  0.484782
2013-01-05  1.103134  1.093360
-------------------------------------------
Source Code of a Unmatched Cell 32
-------------------------------------------
df.iloc[[1,2,4],[0,2]]

-----------------
Original output:
                   A         C
2013-01-02 -0.101019 -0.330334
2013-01-03  0.741284 -0.828190
2013-01-05  1.966178  1.122488
Executed output:
                   A         C
2013-01-02 -0.115422  0.883877
2013-01-03  0.066064  0.269745
2013-01-05  1.103134 -0.835082
-------------------------------------------
Source Code of a Unmatched Cell 33
-------------------------------------------
df.iloc[1:3,:]

-----------------
Original output:
                   A         B         C         D
2013-01-02 -0.101019  0.056060 -0.330334  2.647630
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
Executed output:
                   A         B         C         D
2013-01-02 -0.115422  0.498515  0.883877 -0.719448
2013-01-03  0.066064  1.071778  0.269745 -1.691465
-------------------------------------------
Source Code of a Unmatched Cell 34
-------------------------------------------
df.iloc[:,1:3]

-----------------
Original output:
                   B         C
2013-01-01  0.234746  0.052143
2013-01-02  0.056060 -0.330334
2013-01-03  1.134994 -0.828190
2013-01-04 -0.390470  1.336950
2013-01-05  2.463894  1.122488
2013-01-06 -1.458634  0.518271
Executed output:
                   B         C
2013-01-01 -0.559610 -1.448618
2013-01-02  0.498515  0.883877
2013-01-03  1.071778  0.269745
2013-01-04  0.484782  0.784944
2013-01-05  1.093360 -0.835082
2013-01-06  1.243157  0.971718
-------------------------------------------
Source Code of a Unmatched Cell 35
-------------------------------------------
df.iloc[1,1]

-----------------
Original output:
0.056060169797428117
Executed output:
0.49851453533506818
-------------------------------------------
Source Code of a Unmatched Cell 36
-------------------------------------------
# Again, this is apparently faster than iloc for scalar values
df.iat[1,1]

-----------------
Original output:
0.056060169797428117
Executed output:
0.49851453533506818
-------------------------------------------
Source Code of a Unmatched Cell 37
-------------------------------------------
df[df.A > 0]

-----------------
Original output:
                   A         B         C         D
2013-01-01  0.926488  0.234746  0.052143  0.174532
2013-01-03  0.741284  1.134994 -0.828190 -1.240739
2013-01-05  1.966178  2.463894  1.122488  0.295103
2013-01-06  0.830283 -1.458634  0.518271  0.956375
Executed output:
                   A         B         C         D
2013-01-01  0.301720 -0.559610 -1.448618 -1.297819
2013-01-03  0.066064  1.071778  0.269745 -1.691465
2013-01-05  1.103134  1.093360 -0.835082 -0.663942
-------------------------------------------
Source Code of a Unmatched Cell 38
-------------------------------------------
df[df > 0]

-----------------
Original output:
                   A         B         C         D
2013-01-01  0.926488  0.234746  0.052143  0.174532
2013-01-02       NaN  0.056060       NaN  2.647630
2013-01-03  0.741284  1.134994       NaN       NaN
2013-01-04       NaN       NaN  1.336950       NaN
2013-01-05  1.966178  2.463894  1.122488  0.295103
2013-01-06  0.830283       NaN  0.518271  0.956375
Executed output:
                   A         B         C         D
2013-01-01  0.301720       NaN       NaN       NaN
2013-01-02       NaN  0.498515  0.883877       NaN
2013-01-03  0.066064  1.071778  0.269745       NaN
2013-01-04       NaN  0.484782  0.784944  0.236903
2013-01-05  1.103134  1.093360       NaN       NaN
2013-01-06       NaN  1.243157  0.971718       NaN
-------------------------------------------
Source Code of a Unmatched Cell 39
-------------------------------------------
df3 = df.copy()
df3['E'] = ['one','one','two','three','four','three']
df3

-----------------
Original output:
                   A         B         C         D      E
2013-01-01  0.926488  0.234746  0.052143  0.174532    one
2013-01-02 -0.101019  0.056060 -0.330334  2.647630    one
2013-01-03  0.741284  1.134994 -0.828190 -1.240739    two
2013-01-04 -1.661714 -0.390470  1.336950 -0.017261  three
2013-01-05  1.966178  2.463894  1.122488  0.295103   four
2013-01-06  0.830283 -1.458634  0.518271  0.956375  three
Executed output:
                   A         B         C         D      E
2013-01-01  0.301720 -0.559610 -1.448618 -1.297819    one
2013-01-02 -0.115422  0.498515  0.883877 -0.719448    one
2013-01-03  0.066064  1.071778  0.269745 -1.691465    two
2013-01-04 -0.659243  0.484782  0.784944  0.236903  three
2013-01-05  1.103134  1.093360 -0.835082 -0.663942   four
2013-01-06 -0.872760  1.243157  0.971718 -0.717127  three
-------------------------------------------
Source Code of a Unmatched Cell 40
-------------------------------------------
df3[df3['E'].isin(['two','four'])]

-----------------
Original output:
                   A         B         C         D     E
2013-01-03  0.741284  1.134994 -0.828190 -1.240739   two
2013-01-05  1.966178  2.463894  1.122488  0.295103  four
Executed output:
                   A         B         C         D     E
2013-01-03  0.066064  1.071778  0.269745 -1.691465   two
2013-01-05  1.103134  1.093360 -0.835082 -0.663942  four
-------------------------------------------
Source Code of a Unmatched Cell 46
-------------------------------------------
df

-----------------
Original output:
                   A         B         C  D    F
2013-01-01  0.000000  0.000000  0.052143  5  NaN
2013-01-02 -0.101019  0.056060 -0.330334  5  1.0
2013-01-03  0.741284  1.134994 -0.828190  5  2.0
2013-01-04 -1.661714 -0.390470  1.336950  5  3.0
2013-01-05  1.966178  2.463894  1.122488  5  4.0
2013-01-06  0.830283 -1.458634  0.518271  5  5.0
Executed output:
                   A         B         C  D    F
2013-01-01  0.000000  0.000000 -1.448618  5  NaN
2013-01-02 -0.115422  0.498515  0.883877  5  1.0
2013-01-03  0.066064  1.071778  0.269745  5  2.0
2013-01-04 -0.659243  0.484782  0.784944  5  3.0
2013-01-05  1.103134  1.093360 -0.835082  5  4.0
2013-01-06 -0.872760  1.243157  0.971718  5  5.0
-------------------------------------------
Source Code of a Unmatched Cell 47
-------------------------------------------
df1 = df.reindex(index=dates[0:4], columns=list(df.columns) + ['E'])
df1.loc[dates[0]:dates[1],'E'] = 1
df1

-----------------
Original output:
                   A         B         C  D    F    E
2013-01-01  0.000000  0.000000  0.052143  5  NaN  1.0
2013-01-02 -0.101019  0.056060 -0.330334  5  1.0  1.0
2013-01-03  0.741284  1.134994 -0.828190  5  2.0  NaN
2013-01-04 -1.661714 -0.390470  1.336950  5  3.0  NaN
Executed output:
                   A         B         C  D    F    E
2013-01-01  0.000000  0.000000 -1.448618  5  NaN  1.0
2013-01-02 -0.115422  0.498515  0.883877  5  1.0  1.0
2013-01-03  0.066064  1.071778  0.269745  5  2.0  NaN
2013-01-04 -0.659243  0.484782  0.784944  5  3.0  NaN
-------------------------------------------
Source Code of a Unmatched Cell 48
-------------------------------------------
df1.dropna(how='any')

-----------------
Original output:
                   A        B         C  D    F    E
2013-01-02 -0.101019  0.05606 -0.330334  5  1.0  1.0
Executed output:
                   A         B         C  D    F    E
2013-01-02 -0.115422  0.498515  0.883877  5  1.0  1.0
-------------------------------------------
Source Code of a Unmatched Cell 49
-------------------------------------------
df1.fillna(value=5)

-----------------
Original output:
                   A         B         C  D    F    E
2013-01-01  0.000000  0.000000  0.052143  5  5.0  1.0
2013-01-02 -0.101019  0.056060 -0.330334  5  1.0  1.0
2013-01-03  0.741284  1.134994 -0.828190  5  2.0  5.0
2013-01-04 -1.661714 -0.390470  1.336950  5  3.0  5.0
Executed output:
                   A         B         C  D    F    E
2013-01-01  0.000000  0.000000 -1.448618  5  5.0  1.0
2013-01-02 -0.115422  0.498515  0.883877  5  1.0  1.0
2013-01-03  0.066064  1.071778  0.269745  5  2.0  5.0
2013-01-04 -0.659243  0.484782  0.784944  5  3.0  5.0
-------------------------------------------
Source Code of a Unmatched Cell 51
-------------------------------------------
df.mean()

-----------------
Original output:
A    0.295835
B    0.300974
C    0.311888
D    5.000000
F    3.000000
dtype: float64
Executed output:
A   -0.079704
B    0.731932
C    0.104431
D    5.000000
F    3.000000
dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 52
-------------------------------------------
df.mean(axis=1)

-----------------
Original output:
2013-01-01    1.263036
2013-01-02    1.124941
2013-01-03    1.609618
2013-01-04    1.456953
2013-01-05    2.910512
2013-01-06    1.977984
Freq: D, dtype: float64
Executed output:
2013-01-01    0.887845
2013-01-02    1.453394
2013-01-03    1.681517
2013-01-04    1.722097
2013-01-05    2.072283
2013-01-06    2.268423
Freq: D, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 54
-------------------------------------------
df.sub(s, axis='index')

-----------------
Original output:
                   A         B         C    D    F
2013-01-01       NaN       NaN       NaN  NaN  NaN
2013-01-02       NaN       NaN       NaN  NaN  NaN
2013-01-03 -0.258716  0.134994 -1.828190  4.0  1.0
2013-01-04 -4.661714 -3.390470 -1.663050  2.0  0.0
2013-01-05 -3.033822 -2.536106 -3.877512  0.0 -1.0
2013-01-06       NaN       NaN       NaN  NaN  NaN
Executed output:
                   A         B         C    D    F
2013-01-01       NaN       NaN       NaN  NaN  NaN
2013-01-02       NaN       NaN       NaN  NaN  NaN
2013-01-03 -0.933936  0.071778 -0.730255  4.0  1.0
2013-01-04 -3.659243 -2.515218 -2.215056  2.0  0.0
2013-01-05 -3.896866 -3.906640 -5.835082  0.0 -1.0
2013-01-06       NaN       NaN       NaN  NaN  NaN
-------------------------------------------
Source Code of a Unmatched Cell 55
-------------------------------------------
df.apply(np.cumsum)

-----------------
Original output:
                   A         B         C   D     F
2013-01-01  0.000000  0.000000  0.052143   5   NaN
2013-01-02 -0.101019  0.056060 -0.278191  10   1.0
2013-01-03  0.640265  1.191054 -1.106381  15   3.0
2013-01-04 -1.021450  0.800585  0.230568  20   6.0
2013-01-05  0.944728  3.264479  1.353056  25  10.0
2013-01-06  1.775011  1.805845  1.871327  30  15.0
Executed output:
                   A         B         C   D     F
2013-01-01  0.000000  0.000000 -1.448618   5   NaN
2013-01-02 -0.115422  0.498515 -0.564741  10   1.0
2013-01-03 -0.049358  1.570292 -0.294996  15   3.0
2013-01-04 -0.708601  2.055074  0.489948  20   6.0
2013-01-05  0.394533  3.148435 -0.345134  25  10.0
2013-01-06 -0.478226  4.391591  0.626584  30  15.0
-------------------------------------------
Source Code of a Unmatched Cell 56
-------------------------------------------
df.apply(lambda x: x.max() - x.min())

-----------------
Original output:
A    3.627892
B    3.922528
C    2.165140
D    0.000000
F    4.000000
dtype: float64
Executed output:
A    1.975894
B    1.243157
C    2.420336
D    0.000000
F    4.000000
dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 57
-------------------------------------------
s = pd.Series(np.random.randint(0, 7, size=10))
s

-----------------
Original output:
0    2
1    5
2    0
3    4
4    2
5    2
6    3
7    2
8    0
9    6
dtype: int64
Executed output:
0    6
1    4
2    3
3    4
4    4
5    5
6    0
7    1
8    1
9    1
dtype: int64
-------------------------------------------
Source Code of a Unmatched Cell 58
-------------------------------------------
s.value_counts()

-----------------
Original output:
2    4
0    2
6    1
5    1
4    1
3    1
dtype: int64
Executed output:
4    3
1    3
6    1
5    1
3    1
0    1
dtype: int64
-------------------------------------------
Source Code of a Unmatched Cell 63
-------------------------------------------
df

-----------------
Original output:
          0         1         2         3
0  0.178779 -0.926523  0.396842  0.620239
1  1.619662  0.003677  1.689347  0.404160
2 -0.099175 -0.870761  0.220995  0.459391
3  1.070145  1.155564 -1.258044  0.339461
4  0.327877  1.036754 -0.027040  0.934316
5 -0.967660  0.370377  1.191904 -0.563965
6 -0.255100 -0.406222 -1.202409 -0.372671
7  0.328474  0.503952 -1.545661  1.677085
8  1.485006  1.659626  1.914496 -1.180248
9  0.218641 -1.158323 -0.025863  0.092613
Executed output:
          0         1         2         3
0  0.215551  0.158872 -1.317996 -2.073956
1  1.290763  0.763565  1.565135 -0.514903
2  0.949688 -0.402477  0.700030 -0.581202
3 -1.656195  0.929532 -0.424255  0.161436
4  0.329613 -0.587749 -1.399787  0.783423
5  0.459444 -0.294193 -0.377729 -1.577921
6 -0.675352  0.462501  0.833014 -1.783507
7 -0.589800  1.570423 -1.074283 -0.849438
8  1.387631 -0.740306 -0.367589  0.840856
9 -0.978527 -0.688183  0.392292 -0.307764
-------------------------------------------
Source Code of a Unmatched Cell 65
-------------------------------------------
pieces

-----------------
Original output:
[          0         1         2         3
 0  0.178779 -0.926523  0.396842  0.620239
 1  1.619662  0.003677  1.689347  0.404160
 2 -0.099175 -0.870761  0.220995  0.459391,
           0         1         2         3
 3  1.070145  1.155564 -1.258044  0.339461
 4  0.327877  1.036754 -0.027040  0.934316
 5 -0.967660  0.370377  1.191904 -0.563965
 6 -0.255100 -0.406222 -1.202409 -0.372671,
           0         1         2         3
 7  0.328474  0.503952 -1.545661  1.677085
 8  1.485006  1.659626  1.914496 -1.180248
 9  0.218641 -1.158323 -0.025863  0.092613]
Executed output:
[          0         1         2         3
 0  0.215551  0.158872 -1.317996 -2.073956
 1  1.290763  0.763565  1.565135 -0.514903
 2  0.949688 -0.402477  0.700030 -0.581202,
           0         1         2         3
 3 -1.656195  0.929532 -0.424255  0.161436
 4  0.329613 -0.587749 -1.399787  0.783423
 5  0.459444 -0.294193 -0.377729 -1.577921
 6 -0.675352  0.462501  0.833014 -1.783507,
           0         1         2         3
 7 -0.589800  1.570423 -1.074283 -0.849438
 8  1.387631 -0.740306 -0.367589  0.840856
 9 -0.978527 -0.688183  0.392292 -0.307764]
-------------------------------------------
Source Code of a Unmatched Cell 66
-------------------------------------------
pd.concat(pieces)

-----------------
Original output:
          0         1         2         3
0  0.178779 -0.926523  0.396842  0.620239
1  1.619662  0.003677  1.689347  0.404160
2 -0.099175 -0.870761  0.220995  0.459391
3  1.070145  1.155564 -1.258044  0.339461
4  0.327877  1.036754 -0.027040  0.934316
5 -0.967660  0.370377  1.191904 -0.563965
6 -0.255100 -0.406222 -1.202409 -0.372671
7  0.328474  0.503952 -1.545661  1.677085
8  1.485006  1.659626  1.914496 -1.180248
9  0.218641 -1.158323 -0.025863  0.092613
Executed output:
          0         1         2         3
0  0.215551  0.158872 -1.317996 -2.073956
1  1.290763  0.763565  1.565135 -0.514903
2  0.949688 -0.402477  0.700030 -0.581202
3 -1.656195  0.929532 -0.424255  0.161436
4  0.329613 -0.587749 -1.399787  0.783423
5  0.459444 -0.294193 -0.377729 -1.577921
6 -0.675352  0.462501  0.833014 -1.783507
7 -0.589800  1.570423 -1.074283 -0.849438
8  1.387631 -0.740306 -0.367589  0.840856
9 -0.978527 -0.688183  0.392292 -0.307764
-------------------------------------------
Source Code of a Unmatched Cell 72
-------------------------------------------
df

-----------------
Original output:
          A         B         C         D
0  0.361462  0.351822 -0.675664 -0.559735
1 -1.309404  0.155577 -0.504919  0.761565
2  0.815298  1.386413 -1.307545  1.300731
3  0.226425 -0.207677 -1.048185  0.697299
4  0.443937 -0.445276  0.248782 -0.727655
5  1.600460  0.361654 -0.895461 -1.493369
6 -0.870144  1.748301  0.875036 -0.917719
7  1.345069 -1.513008  0.758326 -0.163641
Executed output:
          A         B         C         D
0 -0.388177 -1.086961 -1.302330  2.571582
1 -2.004304 -2.036200  0.393426  0.580854
2 -0.348620  0.681149 -0.581565  0.999401
3 -0.676760 -0.395566  0.949451  0.387948
4  2.026732  1.242146  0.164991  1.870950
5  0.835849 -0.247285 -2.511353  0.225043
6  0.643371  0.503221  2.137104 -1.177269
7  2.148116  1.391268  0.609233 -0.915113
-------------------------------------------
Source Code of a Unmatched Cell 73
-------------------------------------------
s = df.iloc[3]
df.append(s, ignore_index=True)

-----------------
Original output:
          A         B         C         D
0  0.361462  0.351822 -0.675664 -0.559735
1 -1.309404  0.155577 -0.504919  0.761565
2  0.815298  1.386413 -1.307545  1.300731
3  0.226425 -0.207677 -1.048185  0.697299
4  0.443937 -0.445276  0.248782 -0.727655
5  1.600460  0.361654 -0.895461 -1.493369
6 -0.870144  1.748301  0.875036 -0.917719
7  1.345069 -1.513008  0.758326 -0.163641
8  0.226425 -0.207677 -1.048185  0.697299
Executed output:
          A         B         C         D
0 -0.388177 -1.086961 -1.302330  2.571582
1 -2.004304 -2.036200  0.393426  0.580854
2 -0.348620  0.681149 -0.581565  0.999401
3 -0.676760 -0.395566  0.949451  0.387948
4  2.026732  1.242146  0.164991  1.870950
5  0.835849 -0.247285 -2.511353  0.225043
6  0.643371  0.503221  2.137104 -1.177269
7  2.148116  1.391268  0.609233 -0.915113
8 -0.676760 -0.395566  0.949451  0.387948
-------------------------------------------
Source Code of a Unmatched Cell 74
-------------------------------------------
df = pd.DataFrame({'A' : ['foo', 'bar', 'foo', 'bar',
                          'foo', 'bar', 'foo', 'foo'],
                   'B' : ['one', 'one', 'two', 'three',
                          'two', 'two', 'one', 'three'],
                   'C' : np.random.randn(8),
                   'D' : np.random.randn(8)})
df

-----------------
Original output:
     A      B         C         D
0  foo    one -0.109906  0.423244
1  bar    one  0.091949  0.185823
2  foo    two  0.889006  0.676250
3  bar  three -0.732768 -0.159921
4  foo    two  0.183693  0.529925
5  bar    two  0.238263 -0.182034
6  foo    one  0.305047 -0.394333
7  foo  three  0.279030 -0.912366
Executed output:
     A      B         C         D
0  foo    one -1.980400 -0.088686
1  bar    one -1.604516  0.376999
2  foo    two  0.773835 -0.253753
3  bar  three -0.160181 -0.338355
4  foo    two  0.366150 -2.992797
5  bar    two  0.794363 -0.832095
6  foo    one -1.385983 -1.018734
7  foo  three -0.268287  1.688134
-------------------------------------------
Source Code of a Unmatched Cell 75
-------------------------------------------
df.groupby('A').sum()

-----------------
Original output:
            C         D
A                      
bar -0.402556 -0.156132
foo  1.546871  0.322720
Executed output:
            C         D
A                      
bar -0.970334 -0.793452
foo -2.494684 -2.665837
-------------------------------------------
Source Code of a Unmatched Cell 76
-------------------------------------------
df.groupby(['A','B']).sum()

-----------------
Original output:
                  C         D
A   B                        
bar one    0.091949  0.185823
    three -0.732768 -0.159921
    two    0.238263 -0.182034
foo one    0.195142  0.028910
    three  0.279030 -0.912366
    two    1.072699  1.206176
Executed output:
                  C         D
A   B                        
bar one   -1.604516  0.376999
    three -0.160181 -0.338355
    two    0.794363 -0.832095
foo one   -3.366383 -1.107421
    three -0.268287  1.688134
    two    1.139985 -3.246551
-------------------------------------------
Source Code of a Unmatched Cell 79
-------------------------------------------
df = pd.DataFrame(np.random.randn(8,2), index=index, columns=['A','B'])
df

-----------------
Original output:
                     A         B
first second                    
bar   one    -0.447273 -0.873705
      two     0.750900 -0.195986
baz   one    -1.129655  1.254188
      two    -2.147149 -1.216116
foo   one    -0.107945 -0.724060
      two    -0.528917 -1.138638
qux   one     0.348197 -2.040762
      two    -0.800188 -0.023875
Executed output:
                     A         B
first second                    
bar   one    -1.018259 -0.276583
      two     0.344739 -0.479844
baz   one     1.704302  0.310499
      two    -0.744985 -0.431788
foo   one    -0.426572  0.358554
      two    -0.375282  0.353783
qux   one    -0.872060  0.034950
      two     2.078589  0.843353
-------------------------------------------
Source Code of a Unmatched Cell 80
-------------------------------------------
df2 = df[:4]
df2

-----------------
Original output:
                     A         B
first second                    
bar   one    -0.447273 -0.873705
      two     0.750900 -0.195986
baz   one    -1.129655  1.254188
      two    -2.147149 -1.216116
Executed output:
                     A         B
first second                    
bar   one    -1.018259 -0.276583
      two     0.344739 -0.479844
baz   one     1.704302  0.310499
      two    -0.744985 -0.431788
-------------------------------------------
Source Code of a Unmatched Cell 81
-------------------------------------------
stacked = df2.stack()
stacked

-----------------
Original output:
first  second   
bar    one     A   -0.447273
               B   -0.873705
       two     A    0.750900
               B   -0.195986
baz    one     A   -1.129655
               B    1.254188
       two     A   -2.147149
               B   -1.216116
dtype: float64
Executed output:
first  second   
bar    one     A   -1.018259
               B   -0.276583
       two     A    0.344739
               B   -0.479844
baz    one     A    1.704302
               B    0.310499
       two     A   -0.744985
               B   -0.431788
dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 82
-------------------------------------------
stacked.loc['bar','one','A']

-----------------
Original output:
-0.44727277370485147
Executed output:
-1.0182587187892291
-------------------------------------------
Source Code of a Unmatched Cell 83
-------------------------------------------
stacked['bar','one','B']

-----------------
Original output:
-0.87370521050451377
Executed output:
-0.27658340506061246
-------------------------------------------
Source Code of a Unmatched Cell 84
-------------------------------------------
stacked.unstack()

-----------------
Original output:
                     A         B
first second                    
bar   one    -0.447273 -0.873705
      two     0.750900 -0.195986
baz   one    -1.129655  1.254188
      two    -2.147149 -1.216116
Executed output:
                     A         B
first second                    
bar   one    -1.018259 -0.276583
      two     0.344739 -0.479844
baz   one     1.704302  0.310499
      two    -0.744985 -0.431788
-------------------------------------------
Source Code of a Unmatched Cell 85
-------------------------------------------
stacked.unstack(1)

-----------------
Original output:
second        one       two
first                      
bar   A -0.447273  0.750900
      B -0.873705 -0.195986
baz   A -1.129655 -2.147149
      B  1.254188 -1.216116
Executed output:
second        one       two
first                      
bar   A -1.018259  0.344739
      B -0.276583 -0.479844
baz   A  1.704302 -0.744985
      B  0.310499 -0.431788
-------------------------------------------
Source Code of a Unmatched Cell 86
-------------------------------------------
stacked.unstack(0)

-----------------
Original output:
first          bar       baz
second                      
one    A -0.447273 -1.129655
       B -0.873705  1.254188
two    A  0.750900 -2.147149
       B -0.195986 -1.216116
Executed output:
first          bar       baz
second                      
one    A -1.018259  1.704302
       B -0.276583  0.310499
two    A  0.344739 -0.744985
       B -0.479844 -0.431788
-------------------------------------------
Source Code of a Unmatched Cell 87
-------------------------------------------
df = pd.DataFrame({'A' : ['one', 'one', 'two', 'three'] * 3,
                   'B' : ['A', 'B', 'C'] * 4,
                   'C' : ['foo', 'foo', 'foo', 'bar', 'bar', 'bar'] * 2,
                   'D' : np.random.randn(12),
                   'E' : np.random.randn(12)})
df

-----------------
Original output:
        A  B    C         D         E
0     one  A  foo -0.094257  0.636948
1     one  B  foo -0.169728 -0.332542
2     two  C  foo -0.180871 -2.415263
3   three  A  bar -1.313140  0.521481
4     one  B  bar -0.627812  1.982378
5     one  C  bar  1.497230 -0.824068
6     two  A  foo -1.728003  0.913035
7   three  B  foo  0.474514  0.301596
8     one  C  foo -0.067249  0.431218
9     one  A  bar  0.801314 -0.021111
10    two  B  bar -1.559297  0.307482
11  three  C  bar -0.382109  1.041536
Executed output:
        A  B    C         D         E
0     one  A  foo  0.220296 -1.624168
1     one  B  foo  0.240793  1.548323
2     two  C  foo -0.847607  0.258576
3   three  A  bar  0.356696  0.669386
4     one  B  bar -1.140568 -0.250259
5     one  C  bar  0.969941  0.187678
6     two  A  foo -0.727314  1.382919
7   three  B  foo -0.106166 -1.575489
8     one  C  foo -1.830095  1.368105
9     one  A  bar -0.563955 -1.623280
10    two  B  bar  0.507595  0.551635
11  three  C  bar -0.294247 -0.537637
-------------------------------------------
Source Code of a Unmatched Cell 88
-------------------------------------------
pd.pivot_table(df, values='D', index=['A','B'], columns='C')

-----------------
Original output:
C             bar       foo
A     B                    
one   A  0.801314 -0.094257
      B -0.627812 -0.169728
      C  1.497230 -0.067249
three A -1.313140       NaN
      B       NaN  0.474514
      C -0.382109       NaN
two   A       NaN -1.728003
      B -1.559297       NaN
      C       NaN -0.180871
Executed output:
C             bar       foo
A     B                    
one   A -0.563955  0.220296
      B -1.140568  0.240793
      C  0.969941 -1.830095
three A  0.356696       NaN
      B       NaN -0.106166
      C -0.294247       NaN
two   A       NaN -0.727314
      B  0.507595       NaN
      C       NaN -0.847607
-------------------------------------------
Source Code of a Unmatched Cell 89
-------------------------------------------
rng = pd.date_range('1/1/2012', periods=100, freq='S')
ts = pd.Series(np.random.randint(0, 500, len(rng)), index=rng)
ts.resample('5Min').sum()

-----------------
Original output:
2012-01-01    27146
Freq: 5T, dtype: int64
Executed output:
2012-01-01    25827
Freq: 5T, dtype: int64
-------------------------------------------
Source Code of a Unmatched Cell 90
-------------------------------------------
rng = pd.date_range('3/6/2012 00:00', periods=5, freq='D')
ts = pd.Series(np.random.randn(len(rng)), rng)
ts

-----------------
Original output:
2012-03-06    1.812129
2012-03-07    0.779046
2012-03-08   -0.479603
2012-03-09    0.281837
2012-03-10    0.509181
Freq: D, dtype: float64
Executed output:
2012-03-06    1.730928
2012-03-07    1.338179
2012-03-08   -1.783415
2012-03-09    0.037603
2012-03-10   -1.944062
Freq: D, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 91
-------------------------------------------
ts_utc = ts.tz_localize('UTC')
ts_utc

-----------------
Original output:
2012-03-06 00:00:00+00:00    1.812129
2012-03-07 00:00:00+00:00    0.779046
2012-03-08 00:00:00+00:00   -0.479603
2012-03-09 00:00:00+00:00    0.281837
2012-03-10 00:00:00+00:00    0.509181
Freq: D, dtype: float64
Executed output:
2012-03-06 00:00:00+00:00    1.730928
2012-03-07 00:00:00+00:00    1.338179
2012-03-08 00:00:00+00:00   -1.783415
2012-03-09 00:00:00+00:00    0.037603
2012-03-10 00:00:00+00:00   -1.944062
Freq: D, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 92
-------------------------------------------
ts_utc.tz_convert('US/Pacific')

-----------------
Original output:
2012-03-05 16:00:00-08:00    1.812129
2012-03-06 16:00:00-08:00    0.779046
2012-03-07 16:00:00-08:00   -0.479603
2012-03-08 16:00:00-08:00    0.281837
2012-03-09 16:00:00-08:00    0.509181
Freq: D, dtype: float64
Executed output:
2012-03-05 16:00:00-08:00    1.730928
2012-03-06 16:00:00-08:00    1.338179
2012-03-07 16:00:00-08:00   -1.783415
2012-03-08 16:00:00-08:00    0.037603
2012-03-09 16:00:00-08:00   -1.944062
Freq: D, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 93
-------------------------------------------
rng = pd.date_range('1/1/2012', periods=5, freq='M')
ts = pd.Series(np.random.randn(len(rng)), index=rng)
ts

-----------------
Original output:
2012-01-31    1.116728
2012-02-29   -0.395183
2012-03-31   -0.190003
2012-04-30   -0.877327
2012-05-31   -1.334727
Freq: M, dtype: float64
Executed output:
2012-01-31   -0.581461
2012-02-29   -1.342235
2012-03-31   -0.640449
2012-04-30   -1.111483
2012-05-31   -0.350242
Freq: M, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 94
-------------------------------------------
ps = ts.to_period()
ps

-----------------
Original output:
2012-01    1.116728
2012-02   -0.395183
2012-03   -0.190003
2012-04   -0.877327
2012-05   -1.334727
Freq: M, dtype: float64
Executed output:
2012-01   -0.581461
2012-02   -1.342235
2012-03   -0.640449
2012-04   -1.111483
2012-05   -0.350242
Freq: M, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 95
-------------------------------------------
ps.to_timestamp()

-----------------
Original output:
2012-01-01    1.116728
2012-02-01   -0.395183
2012-03-01   -0.190003
2012-04-01   -0.877327
2012-05-01   -1.334727
Freq: MS, dtype: float64
Executed output:
2012-01-01   -0.581461
2012-02-01   -1.342235
2012-03-01   -0.640449
2012-04-01   -1.111483
2012-05-01   -0.350242
Freq: MS, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 96
-------------------------------------------
prng = pd.period_range('1990Q1', '2000Q4', freq='Q-NOV')
ts = pd.Series(np.random.randn(len(prng)), index=prng)
ts.index = (prng.asfreq('M', 'e') + 1).asfreq('H', 's') + 9
ts.head()

-----------------
Original output:
1990-03-01 09:00    0.093543
1990-06-01 09:00    0.808837
1990-09-01 09:00   -0.467733
1990-12-01 09:00   -0.452802
1991-03-01 09:00    0.278958
Freq: H, dtype: float64
Executed output:
1990-03-01 09:00   -0.094899
1990-06-01 09:00   -0.430281
1990-09-01 09:00    0.356500
1990-12-01 09:00    0.555893
1991-03-01 09:00   -1.129566
Freq: H, dtype: float64
-------------------------------------------
Source Code of a Unmatched Cell 106
-------------------------------------------
ts = pd.Series(np.random.randn(1000), index=pd.date_range('1/1/2000', periods=1000))
ts = ts.cumsum()
ts.plot()

-----------------
Original output:
<matplotlib.axes._subplots.AxesSubplot at 0x117cd10f0>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
C1R1pAAAAABJRU5ErkJggg==

Executed output:
<matplotlib.axes._subplots.AxesSubplot at 0x7f6bd3eeed68>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

-------------------------------------------
Source Code of a Unmatched Cell 107
-------------------------------------------
df = pd.DataFrame(np.random.randn(1000, 4), index=ts.index, columns=['A', 'B', 'C', 'D'])
df = df.cumsum()
plt.figure(); df.plot(); plt.legend(loc='best')

-----------------
Original output:
<matplotlib.legend.Legend at 0x11a151c50><matplotlib.figure.Figure at 0x11a159a58>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

Executed output:
<matplotlib.legend.Legend at 0x7f6bd0b46898><matplotlib.figure.Figure at 0x7f6bd0ada978>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
X5kdXAAAAABJRU5ErkJggg==

