3.5
An error occurred while executing the following cell:
------------------
#Read data
def load_data():
    with gzip.open('mnist.pkl.gz', 'rb') as f:
        training_data, validation_data, test_data = cPickle.load(f, encoding="latin-1")
    f.close()
    return (training_data, validation_data, test_data)

def load_data_wrapper():
    tr_d, va_d, te_d = load_data()
    training_inputs = [np.reshape(x, (784, 1)) for x in tr_d[0]]
    training_results = [vectorized_result(y) for y in tr_d[1]]
    training_data = np.array(list(zip(training_inputs, training_results)))
    validation_inputs = [np.reshape(x, (784, 1)) for x in va_d[0]]
    validation_data = np.array(list(zip(validation_inputs, va_d[1])))
    test_inputs = [np.reshape(x, (784, 1)) for x in te_d[0]]
    test_data = np.array(list(zip(test_inputs, te_d[1])))
    return (training_data, validation_data, test_data)

def vectorized_result(j):
    e = np.zeros((10, 1))
    e[j] = 1.0
    return e

training_data, validation_data, test_data = load_data_wrapper()

training_data_nolab = np.delete(training_data,[1],axis = 1)
training_labels = np.array(np.delete(training_data,[0],axis=1))
training_labels_list = []
training_data_nolab_list = np.zeros(shape=(50000,784))

for i in range(len(training_labels)):
    list.append(training_labels_list, np.argmax(training_labels[i,0]))

for i in range(len(training_data_nolab)):
    training_data_nolab_list[i] = np.array(np.ravel(training_data_nolab[i,0]))

X = training_data_nolab_list
y = np.squeeze(training_labels_list)

test_data_nolab = np.delete(test_data,[1],axis = 1)
test_labels = np.array(np.delete(test_data,[0],axis=1))
test_labels_list = []
test_data_nolab_list = np.zeros(shape=(10000,784))

for i in range(len(test_labels)):
    list.append(test_labels_list, np.argmax(test_labels[i,0]))

for i in range(len(test_data_nolab)):
    test_data_nolab_list[i] = np.array(np.ravel(test_data_nolab[i,0]))

X_test = test_data_nolab_list
y_test = np.squeeze(test_labels_list)

valid_data_nolab = np.delete(validation_data,[1],axis = 1)
valid_labels = np.array(np.delete(validation_data,[0],axis=1))
valid_labels_list = []
valid_data_nolab_list = np.zeros(shape=(10000,784))

for i in range(len(valid_labels)):
    list.append(valid_labels_list, np.argmax(valid_labels[i,0]))

for i in range(len(valid_data_nolab)):
    valid_data_nolab_list[i] = np.array(np.ravel(valid_data_nolab[i,0]))

X_valid = valid_data_nolab_list
y_valid = np.squeeze(valid_labels_list)

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-2-d77b268db4c3>[0m in [0;36m<module>[0;34m()[0m
[1;32m     22[0m     [0;32mreturn[0m [0me[0m[0;34m[0m[0m
[1;32m     23[0m [0;34m[0m[0m
[0;32m---> 24[0;31m [0mtraining_data[0m[0;34m,[0m [0mvalidation_data[0m[0;34m,[0m [0mtest_data[0m [0;34m=[0m [0mload_data_wrapper[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     25[0m [0;34m[0m[0m
[1;32m     26[0m [0mtraining_data_nolab[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0mdelete[0m[0;34m([0m[0mtraining_data[0m[0;34m,[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m,[0m[0maxis[0m [0;34m=[0m [0;36m1[0m[0;34m)[0m[0;34m[0m[0m

[0;32m<ipython-input-2-d77b268db4c3>[0m in [0;36mload_data_wrapper[0;34m()[0m
[1;32m      7[0m [0;34m[0m[0m
[1;32m      8[0m [0;32mdef[0m [0mload_data_wrapper[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0;32m----> 9[0;31m     [0mtr_d[0m[0;34m,[0m [0mva_d[0m[0;34m,[0m [0mte_d[0m [0;34m=[0m [0mload_data[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     10[0m     [0mtraining_inputs[0m [0;34m=[0m [0;34m[[0m[0mnp[0m[0;34m.[0m[0mreshape[0m[0;34m([0m[0mx[0m[0;34m,[0m [0;34m([0m[0;36m784[0m[0;34m,[0m [0;36m1[0m[0;34m)[0m[0;34m)[0m [0;32mfor[0m [0mx[0m [0;32min[0m [0mtr_d[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m[0m[0m
[1;32m     11[0m     [0mtraining_results[0m [0;34m=[0m [0;34m[[0m[0mvectorized_result[0m[0;34m([0m[0my[0m[0;34m)[0m [0;32mfor[0m [0my[0m [0;32min[0m [0mtr_d[0m[0;34m[[0m[0;36m1[0m[0;34m][0m[0;34m][0m[0;34m[0m[0m

[0;32m<ipython-input-2-d77b268db4c3>[0m in [0;36mload_data[0;34m()[0m
[1;32m      1[0m [0;31m#Read data[0m[0;34m[0m[0;34m[0m[0m
[1;32m      2[0m [0;32mdef[0m [0mload_data[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0;32m----> 3[0;31m     [0;32mwith[0m [0mgzip[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0;34m'mnist.pkl.gz'[0m[0;34m,[0m [0;34m'rb'[0m[0;34m)[0m [0;32mas[0m [0mf[0m[0;34m:[0m[0;34m[0m[0m
[0m[1;32m      4[0m         [0mtraining_data[0m[0;34m,[0m [0mvalidation_data[0m[0;34m,[0m [0mtest_data[0m [0;34m=[0m [0mcPickle[0m[0;34m.[0m[0mload[0m[0;34m([0m[0mf[0m[0;34m,[0m [0mencoding[0m[0;34m=[0m[0;34m"latin-1"[0m[0;34m)[0m[0;34m[0m[0m
[1;32m      5[0m     [0mf[0m[0;34m.[0m[0mclose[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py35/lib/python3.5/gzip.py[0m in [0;36mopen[0;34m(filename, mode, compresslevel, encoding, errors, newline)[0m
[1;32m     51[0m     [0mgz_mode[0m [0;34m=[0m [0mmode[0m[0;34m.[0m[0mreplace[0m[0;34m([0m[0;34m"t"[0m[0;34m,[0m [0;34m""[0m[0;34m)[0m[0;34m[0m[0m
[1;32m     52[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m([0m[0mstr[0m[0;34m,[0m [0mbytes[0m[0;34m)[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[0;32m---> 53[0;31m         [0mbinary_file[0m [0;34m=[0m [0mGzipFile[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0mgz_mode[0m[0;34m,[0m [0mcompresslevel[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m     54[0m     [0;32melif[0m [0mhasattr[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m"read"[0m[0;34m)[0m [0;32mor[0m [0mhasattr[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m"write"[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0m
[1;32m     55[0m         [0mbinary_file[0m [0;34m=[0m [0mGzipFile[0m[0;34m([0m[0;32mNone[0m[0;34m,[0m [0mgz_mode[0m[0;34m,[0m [0mcompresslevel[0m[0;34m,[0m [0mfilename[0m[0;34m)[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/Osiris_py35/lib/python3.5/gzip.py[0m in [0;36m__init__[0;34m(self, filename, mode, compresslevel, fileobj, mtime)[0m
[1;32m    161[0m             [0mmode[0m [0;34m+=[0m [0;34m'b'[0m[0;34m[0m[0m
[1;32m    162[0m         [0;32mif[0m [0mfileobj[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0m
[0;32m--> 163[0;31m             [0mfileobj[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mmyfileobj[0m [0;34m=[0m [0mbuiltins[0m[0;34m.[0m[0mopen[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0mmode[0m [0;32mor[0m [0;34m'rb'[0m[0;34m)[0m[0;34m[0m[0m
[0m[1;32m    164[0m         [0;32mif[0m [0mfilename[0m [0;32mis[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0m
[1;32m    165[0m             [0mfilename[0m [0;34m=[0m [0mgetattr[0m[0;34m([0m[0mfileobj[0m[0;34m,[0m [0;34m'name'[0m[0;34m,[0m [0;34m''[0m[0;34m)[0m[0;34m[0m[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: 'mnist.pkl.gz'
FileNotFoundError: [Errno 2] No such file or directory: 'mnist.pkl.gz'

Executability                            : False
