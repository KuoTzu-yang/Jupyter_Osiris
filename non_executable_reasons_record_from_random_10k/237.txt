3.5
Executability                            : True
Reproducibility                          : number of matched cells: 6 ; number of cells: 9
Reproducibility                          : matched ratio: 0.667 ; index of matched cells: [0, 2, 3, 5, 6, 7]
-------------------------------------------
Source Code of a Unmatched Cell 1
-------------------------------------------
import matplotlib.pyplot as plt
import random
L = [random.randint(1,50) for i in range(10000)]
plt.hist(L,50)
plt.show()

-----------------
Original output:
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

Executed output:
<Figure size 640x480 with 1 Axes>
-------------------------------------------
Source Code of a Unmatched Cell 4
-------------------------------------------
# Ecrire le programme ici

import matplotlib.pyplot as plt
import random
L = [random.randint(0,1000) for i in range(5000)]
plt.hist(L,20)
plt.show()

-----------------
Original output:
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

Executed output:
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

-------------------------------------------
Source Code of a Unmatched Cell 8
-------------------------------------------
# La tester à l'aide de la liste de 2000 valeurs entières comprises entre -50 et 50 suivante générée aléatoirement:
import random
L=[random.randint(-50,50) for i in range(2000)]
position(L)

-----------------
Original output:
(-50, -24, 1.0, 27, 50)
Executed output:
(-50, -25, -1.0, 24, 50)
