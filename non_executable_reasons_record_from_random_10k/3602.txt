3.5
An error occurred while executing the following cell:
------------------
import warnings
warnings.filterwarnings('ignore')
#! /usr/bin/env python
# -*- coding: utf-8 -*-
import numpy as np
import cv2
from matplotlib import pyplot as plt

# mostrar im√°genes y figuras inline
%matplotlib inline
import matplotlib
matplotlib.rcParams['figure.figsize'] = 20, 20


if __name__ == "__main__":
    MIN_MATCH_COUNT = 10
    img1 = cv2.imread('data/graf1.png',0)
    img2 = cv2.imread('data/graf3.png',0)

    sift = cv2.xfeatures2d.SIFT_create()

    kp1, des1 = sift.detectAndCompute(img1,None)
    kp2, des2 = sift.detectAndCompute(img2,None)

    FLANN_INDEX_KDTREE = 0
    index_params = dict(algorithm = FLANN_INDEX_KDTREE, trees = 5)
    search_params = dict(checks = 50)
    flann = cv2.FlannBasedMatcher(index_params, search_params)
    matches = flann.knnMatch(des1,des2,k=2)

    # guardo todos los "buenos" matches
    good = []
    for m,n in matches:
        if m.distance < 0.7*n.distance:
            good.append(m)
    # si tengo mas de MIN_MATCH_COUNT buenos maths sigo
    if len(good)>MIN_MATCH_COUNT:
        # dark magic list comprension
        src_pts = np.float32([ kp1[m.queryIdx].pt for m in good]).reshape(-1,1,2)
        dst_pts = np.float32([ kp2[m.trainIdx].pt for m in good]).reshape(-1,1,2)

        # calculamos la homograf√≠a
        M, mask = cv2.findHomography(src_pts, dst_pts, cv2.RANSAC,5.0)
        matchesMask = mask.ravel().tolist()

        # creo un cuadrado con el contorno de la primer im√°gen para proyectarla
        # sobre la segunda
        h,w = img1.shape
        pts = np.float32([ [0,0],[0,h-1],[w-1,h-1],[w-1,0]]).reshape(-1,1,2)
        dst = cv2.perspectiveTransform(pts,M)

        # la muestro sobre la segunda
        img2 = cv2.polylines(img2,[np.int32(dst)],True,255,3, cv2.LINE_AA)
    else:
        print ("Not enough matches are found - %d/%d" % (len(good),MIN_MATCH_COUNT))
        matchesMask = None

    draw_params = dict(matchColor = (0,255,0), # mapeo de matches punto a punto (l√≠neas)
        singlePointColor = None,
        matchesMask = matchesMask, # draw only inliers
        flags = 2)

    img3 = cv2.drawMatches(img1,kp1,img2,kp2,good,None,**draw_params)
    plt.imshow(img3, 'gray')


------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mImportError[0m                               Traceback (most recent call last)
[0;32m<ipython-input-1-e3969136e7a6>[0m in [0;36m<module>[0;34m()[0m
[1;32m      4[0m [0;31m# -*- coding: utf-8 -*-[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;32mimport[0m [0mnumpy[0m [0;32mas[0m [0mnp[0m[0;34m[0m[0m
[0;32m----> 6[0;31m [0;32mimport[0m [0mcv2[0m[0;34m[0m[0m
[0m[1;32m      7[0m [0;32mfrom[0m [0mmatplotlib[0m [0;32mimport[0m [0mpyplot[0m [0;32mas[0m [0mplt[0m[0;34m[0m[0m
[1;32m      8[0m [0;34m[0m[0m

[0;31mImportError[0m: No module named 'cv2'
ImportError: No module named 'cv2'

Executability                            : False
